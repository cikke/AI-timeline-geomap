{"version":3,"file":"d3-geo-DkMYW_4p.js","sources":["../../node_modules/d3-geo/src/math.js","../../node_modules/d3-geo/src/noop.js","../../node_modules/d3-geo/src/stream.js","../../node_modules/d3-geo/src/cartesian.js","../../node_modules/d3-geo/src/compose.js","../../node_modules/d3-geo/src/rotation.js","../../node_modules/d3-geo/src/circle.js","../../node_modules/d3-geo/src/clip/buffer.js","../../node_modules/d3-geo/src/pointEqual.js","../../node_modules/d3-geo/src/clip/rejoin.js","../../node_modules/d3-geo/src/polygonContains.js","../../node_modules/d3-geo/src/clip/index.js","../../node_modules/d3-geo/src/clip/antimeridian.js","../../node_modules/d3-geo/src/clip/circle.js","../../node_modules/d3-geo/src/clip/line.js","../../node_modules/d3-geo/src/clip/rectangle.js","../../node_modules/d3-geo/src/identity.js","../../node_modules/d3-geo/src/path/area.js","../../node_modules/d3-geo/src/path/bounds.js","../../node_modules/d3-geo/src/path/centroid.js","../../node_modules/d3-geo/src/path/context.js","../../node_modules/d3-geo/src/path/measure.js","../../node_modules/d3-geo/src/path/string.js","../../node_modules/d3-geo/src/path/index.js","../../node_modules/d3-geo/src/transform.js","../../node_modules/d3-geo/src/projection/fit.js","../../node_modules/d3-geo/src/projection/resample.js","../../node_modules/d3-geo/src/projection/index.js","../../node_modules/d3-geo/src/projection/azimuthal.js","../../node_modules/d3-geo/src/projection/orthographic.js"],"sourcesContent":["export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default x => x;\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n"],"names":["epsilon","epsilon2","pi","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","sin","sign","x","sqrt","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","object","features","n","coordinates","streamLine","streamPolygon","geometries","closed","coordinate","i","geoStream","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","compose","y","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleStream","radius","delta","direction","t0","t1","cosRadius","sinRadius","step","circleRadius","point","t","clipBuffer","lines","line","m","result","pointEqual","Intersection","points","other","entry","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","segment","p0","p1","link","start","current","isSubject","array","longitude","polygonContains","polygon","sinPhi","normal","angle","winding","sum","Adder","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","j","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","lineStart","lineEnd","pointRing","ringStart","ringEnd","merge","pointLine","clean","ringSegments","validSegment","clipAntimeridian","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","from","to","clipCircle","cr","smallRadius","notHemisphere","visible","c0","v0","v00","point2","v","c","code","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","B","u","w","uu","t2","q","polar","meridian","q1","r","x0","y0","x1","y1","ax","ay","bx","by","dx","dy","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","p","ca","cb","activeStream","bufferStream","x__","y__","v__","x_","y_","v_","first","clipStream","polygonStart","polygonEnd","polygonInside","a0","b0","b1","cleanInside","linePoint","identity","areaSum","areaRingSum","x00","y00","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","boundsStream","boundsPoint","bounds","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_","lengthSum","lengthRing","lengthStream","lengthPointFirst","lengthPoint","length","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","append","appendRound","s","strings","index","projection","pointRadius","projectionStream","contextStream","path","pathArea","pathMeasure","pathBounds","pathCentroid","transformer","methods","TransformStream","key","fit","fitBounds","fitExtent","extent","h","fitSize","size","fitWidth","width","fitHeight","height","maxDepth","cosMinDistance","resample","project","delta2","resampleNone","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","transformRadians","transformRotate","rotate","scaleTranslate","sx","sy","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","theta","preclip","postclip","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","invert","reset","recenter","center","azimuthalInvert","sc","cc","orthographicRaw","orthographic"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}