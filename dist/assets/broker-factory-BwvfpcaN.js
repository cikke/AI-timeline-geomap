import{g as w}from"./fast-unique-numbers-DPbHlSK3.js";const M=s=>typeof s.start=="function",g=new WeakMap,k=s=>({...s,connect:({call:r})=>async()=>{const{port1:t,port2:e}=new MessageChannel,i=await r("connect",{port:t},[t]);return g.set(e,i),e},disconnect:({call:r})=>async t=>{const e=g.get(t);if(e===void 0)throw new Error("The given port is not connected.");await r("disconnect",{portId:e})},isSupported:({call:r})=>()=>r("isSupported")}),p=new WeakMap,O=s=>{if(p.has(s))return p.get(s);const r=new Map;return p.set(s,r),r},m=s=>{const r=k(s);return t=>{const e=O(t);t.addEventListener("message",({data:n})=>{const{id:o}=n;if(o!==null&&e.has(o)){const{reject:c,resolve:u}=e.get(o);e.delete(o),n.error===void 0?u(n.result):c(new Error(n.error.message))}}),M(t)&&t.start();const i=(n,o=null,c=[])=>new Promise((u,d)=>{const l=w(e);e.set(l,{reject:d,resolve:u}),o===null?t.postMessage({id:l,method:n},c):t.postMessage({id:l,method:n,params:o},c)}),f=(n,o,c=[])=>{t.postMessage({id:null,method:n,params:o},c)};let a={};for(const[n,o]of Object.entries(r))a={...a,[n]:o({call:i,notify:f})};return{...a}}};export{m as c};
//# sourceMappingURL=broker-factory-BwvfpcaN.js.map
