{"version":3,"file":"multi-buffer-data-view-IGXr9-7R.js","sources":["../../node_modules/multi-buffer-data-view/build/es2019/classes/multi-buffer-data-view.js"],"sourcesContent":["export class MultiBufferDataView {\n    constructor(buffers, byteOffset = 0, byteLength) {\n        if (byteOffset < 0 || (byteLength !== undefined && byteLength < 0)) {\n            throw new RangeError();\n        }\n        const availableBytes = buffers.reduce((length, buffer) => length + buffer.byteLength, 0);\n        if (byteOffset > availableBytes || (byteLength !== undefined && byteOffset + byteLength > availableBytes)) {\n            throw new RangeError();\n        }\n        const dataViews = [];\n        const effectiveByteLength = byteLength === undefined ? availableBytes - byteOffset : byteLength;\n        const truncatedBuffers = [];\n        let consumedByteLength = 0;\n        let truncatedByteOffset = byteOffset;\n        for (const buffer of buffers) {\n            if (truncatedBuffers.length === 0) {\n                if (buffer.byteLength > truncatedByteOffset) {\n                    consumedByteLength = buffer.byteLength - truncatedByteOffset;\n                    const byteLengthOfDataView = consumedByteLength > effectiveByteLength ? effectiveByteLength : consumedByteLength;\n                    dataViews.push(new DataView(buffer, truncatedByteOffset, byteLengthOfDataView));\n                    truncatedBuffers.push(buffer);\n                }\n                else {\n                    truncatedByteOffset -= buffer.byteLength;\n                }\n            }\n            else if (consumedByteLength < effectiveByteLength) {\n                consumedByteLength += buffer.byteLength;\n                const byteLengthOfDataView = consumedByteLength > effectiveByteLength\n                    ? buffer.byteLength - consumedByteLength + effectiveByteLength\n                    : buffer.byteLength;\n                dataViews.push(new DataView(buffer, 0, byteLengthOfDataView));\n                truncatedBuffers.push(buffer);\n            }\n        }\n        this._buffers = truncatedBuffers;\n        this._byteLength = effectiveByteLength;\n        this._byteOffset = truncatedByteOffset;\n        this._dataViews = dataViews;\n        this._internalBuffer = new DataView(new ArrayBuffer(8));\n    }\n    get buffers() {\n        return this._buffers;\n    }\n    get byteLength() {\n        return this._byteLength;\n    }\n    get byteOffset() {\n        return this._byteOffset;\n    }\n    getFloat32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getFloat32(0, littleEndian);\n    }\n    getFloat64(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        this._internalBuffer.setUint8(4, this.getUint8(byteOffset + 4));\n        this._internalBuffer.setUint8(5, this.getUint8(byteOffset + 5));\n        this._internalBuffer.setUint8(6, this.getUint8(byteOffset + 6));\n        this._internalBuffer.setUint8(7, this.getUint8(byteOffset + 7));\n        return this._internalBuffer.getFloat64(0, littleEndian);\n    }\n    getInt16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getInt16(0, littleEndian);\n    }\n    getInt32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getInt32(0, littleEndian);\n    }\n    getInt8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getInt8(byteOffset - byteOffsetOfDataView);\n    }\n    getUint16(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        return this._internalBuffer.getUint16(0, littleEndian);\n    }\n    getUint32(byteOffset, littleEndian) {\n        this._internalBuffer.setUint8(0, this.getUint8(byteOffset + 0));\n        this._internalBuffer.setUint8(1, this.getUint8(byteOffset + 1));\n        this._internalBuffer.setUint8(2, this.getUint8(byteOffset + 2));\n        this._internalBuffer.setUint8(3, this.getUint8(byteOffset + 3));\n        return this._internalBuffer.getUint32(0, littleEndian);\n    }\n    getUint8(byteOffset) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        return dataView.getUint8(byteOffset - byteOffsetOfDataView);\n    }\n    setFloat32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setFloat64(byteOffset, value, littleEndian) {\n        this._internalBuffer.setFloat64(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n        this.setUint8(byteOffset + 4, this._internalBuffer.getUint8(4));\n        this.setUint8(byteOffset + 5, this._internalBuffer.getUint8(5));\n        this.setUint8(byteOffset + 6, this._internalBuffer.getUint8(6));\n        this.setUint8(byteOffset + 7, this._internalBuffer.getUint8(7));\n    }\n    setInt16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setInt32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setInt32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setInt8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setInt8(byteOffset - byteOffsetOfDataView, value);\n    }\n    setUint16(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint16(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n    }\n    setUint32(byteOffset, value, littleEndian) {\n        this._internalBuffer.setUint32(0, value, littleEndian);\n        this.setUint8(byteOffset, this._internalBuffer.getUint8(0));\n        this.setUint8(byteOffset + 1, this._internalBuffer.getUint8(1));\n        this.setUint8(byteOffset + 2, this._internalBuffer.getUint8(2));\n        this.setUint8(byteOffset + 3, this._internalBuffer.getUint8(3));\n    }\n    setUint8(byteOffset, value) {\n        const [dataView, byteOffsetOfDataView] = this._findDataViewWithOffset(byteOffset);\n        dataView.setUint8(byteOffset - byteOffsetOfDataView, value);\n    }\n    _findDataViewWithOffset(byteOffset) {\n        let byteOffsetOfDataView = 0;\n        for (const dataView of this._dataViews) {\n            const byteOffsetOfNextDataView = byteOffsetOfDataView + dataView.byteLength;\n            if (byteOffset >= byteOffsetOfDataView && byteOffset < byteOffsetOfNextDataView) {\n                return [dataView, byteOffsetOfDataView];\n            }\n            byteOffsetOfDataView = byteOffsetOfNextDataView;\n        }\n        throw new RangeError();\n    }\n}\n//# sourceMappingURL=multi-buffer-data-view.js.map"],"names":["MultiBufferDataView","buffers","byteOffset","byteLength","availableBytes","length","buffer","dataViews","effectiveByteLength","truncatedBuffers","consumedByteLength","truncatedByteOffset","byteLengthOfDataView","littleEndian","dataView","byteOffsetOfDataView","value","byteOffsetOfNextDataView"],"mappings":"AAAO,MAAMA,CAAoB,CAC7B,YAAYC,EAASC,EAAa,EAAGC,EAAY,CAC7C,GAAID,EAAa,GAAMC,IAAe,QAAaA,EAAa,EAC5D,MAAM,IAAI,WAEd,MAAMC,EAAiBH,EAAQ,OAAO,CAACI,EAAQC,IAAWD,EAASC,EAAO,WAAY,CAAC,EACvF,GAAIJ,EAAaE,GAAmBD,IAAe,QAAaD,EAAaC,EAAaC,EACtF,MAAM,IAAI,WAEd,MAAMG,EAAY,CAAA,EACZC,EAAsBL,IAAe,OAAYC,EAAiBF,EAAaC,EAC/EM,EAAmB,CAAA,EACzB,IAAIC,EAAqB,EACrBC,EAAsBT,EAC1B,UAAWI,KAAUL,EACjB,GAAIQ,EAAiB,SAAW,EAC5B,GAAIH,EAAO,WAAaK,EAAqB,CACzCD,EAAqBJ,EAAO,WAAaK,EACzC,MAAMC,EAAuBF,EAAqBF,EAAsBA,EAAsBE,EAC9FH,EAAU,KAAK,IAAI,SAASD,EAAQK,EAAqBC,CAAoB,CAAC,EAC9EH,EAAiB,KAAKH,CAAM,CAC/B,MAEGK,GAAuBL,EAAO,mBAG7BI,EAAqBF,EAAqB,CAC/CE,GAAsBJ,EAAO,WAC7B,MAAMM,EAAuBF,EAAqBF,EAC5CF,EAAO,WAAaI,EAAqBF,EACzCF,EAAO,WACbC,EAAU,KAAK,IAAI,SAASD,EAAQ,EAAGM,CAAoB,CAAC,EAC5DH,EAAiB,KAAKH,CAAM,CAC/B,CAEL,KAAK,SAAWG,EAChB,KAAK,YAAcD,EACnB,KAAK,YAAcG,EACnB,KAAK,WAAaJ,EAClB,KAAK,gBAAkB,IAAI,SAAS,IAAI,YAAY,CAAC,CAAC,CACzD,CACD,IAAI,SAAU,CACV,OAAO,KAAK,QACf,CACD,IAAI,YAAa,CACb,OAAO,KAAK,WACf,CACD,IAAI,YAAa,CACb,OAAO,KAAK,WACf,CACD,WAAWL,EAAYW,EAAc,CACjC,YAAK,gBAAgB,SAAS,EAAG,KAAK,SAASX,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EACvD,KAAK,gBAAgB,WAAW,EAAGW,CAAY,CACzD,CACD,WAAWX,EAAYW,EAAc,CACjC,YAAK,gBAAgB,SAAS,EAAG,KAAK,SAASX,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EACvD,KAAK,gBAAgB,WAAW,EAAGW,CAAY,CACzD,CACD,SAASX,EAAYW,EAAc,CAC/B,YAAK,gBAAgB,SAAS,EAAG,KAAK,SAASX,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EACvD,KAAK,gBAAgB,SAAS,EAAGW,CAAY,CACvD,CACD,SAASX,EAAYW,EAAc,CAC/B,YAAK,gBAAgB,SAAS,EAAG,KAAK,SAASX,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EACvD,KAAK,gBAAgB,SAAS,EAAGW,CAAY,CACvD,CACD,QAAQX,EAAY,CAChB,KAAM,CAACY,EAAUC,CAAoB,EAAI,KAAK,wBAAwBb,CAAU,EAChF,OAAOY,EAAS,QAAQZ,EAAaa,CAAoB,CAC5D,CACD,UAAUb,EAAYW,EAAc,CAChC,YAAK,gBAAgB,SAAS,EAAG,KAAK,SAASX,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EACvD,KAAK,gBAAgB,UAAU,EAAGW,CAAY,CACxD,CACD,UAAUX,EAAYW,EAAc,CAChC,YAAK,gBAAgB,SAAS,EAAG,KAAK,SAASX,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EAC9D,KAAK,gBAAgB,SAAS,EAAG,KAAK,SAASA,EAAa,CAAC,CAAC,EACvD,KAAK,gBAAgB,UAAU,EAAGW,CAAY,CACxD,CACD,SAASX,EAAY,CACjB,KAAM,CAACY,EAAUC,CAAoB,EAAI,KAAK,wBAAwBb,CAAU,EAChF,OAAOY,EAAS,SAASZ,EAAaa,CAAoB,CAC7D,CACD,WAAWb,EAAYc,EAAOH,EAAc,CACxC,KAAK,gBAAgB,WAAW,EAAGG,EAAOH,CAAY,EACtD,KAAK,SAASX,EAAY,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC1D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,CACjE,CACD,WAAWA,EAAYc,EAAOH,EAAc,CACxC,KAAK,gBAAgB,WAAW,EAAGG,EAAOH,CAAY,EACtD,KAAK,SAASX,EAAY,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC1D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,CACjE,CACD,SAASA,EAAYc,EAAOH,EAAc,CACtC,KAAK,gBAAgB,SAAS,EAAGG,EAAOH,CAAY,EACpD,KAAK,SAASX,EAAY,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC1D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,CACjE,CACD,SAASA,EAAYc,EAAOH,EAAc,CACtC,KAAK,gBAAgB,SAAS,EAAGG,EAAOH,CAAY,EACpD,KAAK,SAASX,EAAY,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC1D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,CACjE,CACD,QAAQA,EAAYc,EAAO,CACvB,KAAM,CAACF,EAAUC,CAAoB,EAAI,KAAK,wBAAwBb,CAAU,EAChFY,EAAS,QAAQZ,EAAaa,EAAsBC,CAAK,CAC5D,CACD,UAAUd,EAAYc,EAAOH,EAAc,CACvC,KAAK,gBAAgB,UAAU,EAAGG,EAAOH,CAAY,EACrD,KAAK,SAASX,EAAY,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC1D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,CACjE,CACD,UAAUA,EAAYc,EAAOH,EAAc,CACvC,KAAK,gBAAgB,UAAU,EAAGG,EAAOH,CAAY,EACrD,KAAK,SAASX,EAAY,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC1D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,EAC9D,KAAK,SAASA,EAAa,EAAG,KAAK,gBAAgB,SAAS,CAAC,CAAC,CACjE,CACD,SAASA,EAAYc,EAAO,CACxB,KAAM,CAACF,EAAUC,CAAoB,EAAI,KAAK,wBAAwBb,CAAU,EAChFY,EAAS,SAASZ,EAAaa,EAAsBC,CAAK,CAC7D,CACD,wBAAwBd,EAAY,CAChC,IAAIa,EAAuB,EAC3B,UAAWD,KAAY,KAAK,WAAY,CACpC,MAAMG,EAA2BF,EAAuBD,EAAS,WACjE,GAAIZ,GAAca,GAAwBb,EAAae,EACnD,MAAO,CAACH,EAAUC,CAAoB,EAE1CA,EAAuBE,CAC1B,CACD,MAAM,IAAI,UACb,CACL","x_google_ignoreList":[0]}