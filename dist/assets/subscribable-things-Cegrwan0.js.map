{"version":3,"file":"subscribable-things-Cegrwan0.js","sources":["../../node_modules/subscribable-things/build/es2019/factories/on.js","../../node_modules/subscribable-things/build/es2019/factories/wrap-subscribe-function.js","../../node_modules/subscribable-things/build/es2019/module.js"],"sourcesContent":["export const createOn = (wrapSubscribeFunction) => {\n    return (target, type, options) => wrapSubscribeFunction((observer) => {\n        const listener = (event) => observer.next(event);\n        target.addEventListener(type, listener, options);\n        return () => target.removeEventListener(type, listener, options);\n    });\n};\n//# sourceMappingURL=on.js.map","export const createWrapSubscribeFunction = (patch, toObserver) => {\n    const emptyFunction = () => { }; // tslint:disable-line:no-empty\n    const isNextFunction = (args) => typeof args[0] === 'function';\n    return (innerSubscribe) => {\n        const subscribe = ((...args) => {\n            const unsubscribe = innerSubscribe(isNextFunction(args) ? toObserver({ next: args[0] }) : toObserver(...args));\n            if (unsubscribe !== undefined) {\n                return unsubscribe;\n            }\n            return emptyFunction;\n        });\n        subscribe[Symbol.observable] = () => ({\n            subscribe: (...args) => ({ unsubscribe: subscribe(...args) })\n        });\n        return patch(subscribe);\n    };\n};\n//# sourceMappingURL=wrap-subscribe-function.js.map","import { patch, toObserver } from 'rxjs-interop';\nimport { createAnimationFrame } from './factories/animation-frame';\nimport { createAttribute } from './factories/attribute';\nimport { createGeolocation } from './factories/geolocation';\nimport { createIntersections } from './factories/intersections';\nimport { createMapSubscribableThing } from './factories/map-subscribable-thing';\nimport { createMediaDevices } from './factories/media-devices';\nimport { createMediaQueryMatch } from './factories/media-query-match';\nimport { createMetrics } from './factories/metrics';\nimport { createMidiInputs } from './factories/midi-inputs';\nimport { createMidiOutputs } from './factories/midi-outputs';\nimport { createMutations } from './factories/mutations';\nimport { createOn } from './factories/on';\nimport { createOnline } from './factories/online';\nimport { createPermissionState } from './factories/permission-state';\nimport { createPrependSubscribableThing } from './factories/prepend-subscribable-thing';\nimport { createReports } from './factories/reports';\nimport { createResizes } from './factories/resizes';\nimport { createUnhandledRejection } from './factories/unhandled-rejection';\nimport { createVideoFrame } from './factories/video-frame';\nimport { createWakeLock } from './factories/wake-lock';\nimport { createWindow } from './factories/window';\nimport { createWrapSubscribeFunction } from './factories/wrap-subscribe-function';\nimport { emitNotSupportedError } from './functions/emit-not-supported-error';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst window = createWindow();\nconst wrapSubscribeFunction = createWrapSubscribeFunction(patch, toObserver);\nexport const animationFrame = createAnimationFrame(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mutations = createMutations(emitNotSupportedError, window, wrapSubscribeFunction);\nconst mapSubscribableThing = createMapSubscribableThing(wrapSubscribeFunction);\nconst prependSubscribableThing = createPrependSubscribableThing(wrapSubscribeFunction);\nexport const attribute = createAttribute(mapSubscribableThing, mutations, prependSubscribableThing);\nexport const geolocation = createGeolocation(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const intersections = createIntersections(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaDevices = createMediaDevices(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const mediaQueryMatch = createMediaQueryMatch(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const metrics = createMetrics(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const midiInputs = createMidiInputs(wrapSubscribeFunction);\nexport const midiOutputs = createMidiOutputs(wrapSubscribeFunction);\nexport const on = createOn(wrapSubscribeFunction);\nexport const online = createOnline(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const permissionState = createPermissionState(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const reports = createReports(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const resizes = createResizes(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const unhandledRejection = createUnhandledRejection(emitNotSupportedError, window, wrapSubscribeFunction);\nexport const videoFrame = createVideoFrame(emitNotSupportedError, wrapSubscribeFunction);\nexport const wakeLock = createWakeLock(emitNotSupportedError, window, wrapSubscribeFunction);\n//# sourceMappingURL=module.js.map"],"names":["createOn","wrapSubscribeFunction","target","type","options","observer","listener","event","createWrapSubscribeFunction","patch","toObserver","emptyFunction","isNextFunction","args","innerSubscribe","subscribe","unsubscribe","on"],"mappings":"sDAAO,MAAMA,EAAYC,GACd,CAACC,EAAQC,EAAMC,IAAYH,EAAuBI,GAAa,CAClE,MAAMC,EAAYC,GAAUF,EAAS,KAAKE,CAAK,EAC/C,OAAAL,EAAO,iBAAiBC,EAAMG,EAAUF,CAAO,EACxC,IAAMF,EAAO,oBAAoBC,EAAMG,EAAUF,CAAO,CACvE,CAAK,ECLQI,EAA8B,CAACC,EAAOC,IAAe,CAC9D,MAAMC,EAAgB,IAAM,GACtBC,EAAkBC,GAAS,OAAOA,EAAK,CAAC,GAAM,WACpD,OAAQC,GAAmB,CACvB,MAAMC,EAAa,IAAIF,IAAS,CAC5B,MAAMG,EAAcF,EAAeF,EAAeC,CAAI,EAAIH,EAAW,CAAE,KAAMG,EAAK,CAAC,CAAC,CAAE,EAAIH,EAAW,GAAGG,CAAI,CAAC,EAC7G,OAAIG,IAAgB,OACTA,EAEJL,CACnB,EACQ,OAAAI,EAAU,OAAO,UAAU,EAAI,KAAO,CAClC,UAAW,IAAIF,KAAU,CAAE,YAAaE,EAAU,GAAGF,CAAI,GACrE,GACeJ,EAAMM,CAAS,CAC9B,CACA,ECeMd,EAAwBO,EAA4BC,EAAOC,CAAU,EAa9DO,EAAKjB,EAASC,CAAqB","x_google_ignoreList":[0,1,2]}